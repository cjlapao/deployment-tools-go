name: Release

on:
  push:
    tags:
    - 'v*'

jobs:  
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15
    - name: Build Linux x64
      id: build_linux_x64
      env:
        GOOS: linux
        GOARCH: amd64
      run: go build -o deploymenttoolsctl
    - name: Zip Linux x64
      id: zip_linux_x64
      run: |
        zip --junk-paths deploymenttoolsctl_linux_x64 deploymenttoolsctl
    - name: Build Windows x64
      id: build_windows_x64
      env:
        GOOS: windows
        GOARCH: amd64
      run: go build -o deploymenttoolsctl.exe
    - name: Zip Windows x64
      id: zip_windows_x64
      run: |
        zip --junk-paths deploymenttoolsctl_win_x64 deploymenttoolsctl.exe
    - name: Branch name
      id: branch_name
      run: |
        echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
        echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
        echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name:  ${{ steps.branch_name.outputs.SOURCE_TAG }}
        release_name: Release ${{ steps.branch_name.outputs.SOURCE_TAG }}
        draft: false
        prerelease: false
    - name: Upload Linux x64 Asset
      id: upload-linux-x64-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./deploymenttools_linux_x64.zip
        asset_name: deploymenttools_linux_x64.zip
        asset_content_type: application/zip
    - name: Upload Windows x64 Asset
      id: upload-windows-x64-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./deploymenttools_win_x64.zip
        asset_name: deploymenttoolsctl_win_x64.zip
        asset_content_type: application/zip        